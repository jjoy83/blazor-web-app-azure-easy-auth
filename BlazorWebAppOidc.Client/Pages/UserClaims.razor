@page "/user-claims"
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveWebAssembly


<PageTitle>User Claims</PageTitle>

<h1>User Claims</h1>

@if (claims.Count() > 0)
{
    <ul>
        @foreach (var claim in claims)
        {
            <li><b>@claim.Type:</b> @claim.Value</li>
        }
    </ul>
}

@code {
    private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();

    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        if (AuthState == null)
        {
            Console.Write("AuthState is null");
            return;
        }
        var authState = await AuthState;
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            Console.Write("User is not authenticated");
            return;
        }

        claims = user.Claims;
    }
}
